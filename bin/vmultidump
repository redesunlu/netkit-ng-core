#!/bin/bash

set -e

SCRIPTNAME=`basename $0`
NETKIT_DUMPS="/tmp"
MERGECAP=`which mergecap` || true


help () {
    echo "Usage: $SCRIPTNAME domains > dump.pcap"
    cat <<EOF

This command captures frames from multiple collision domains
and writes them, in order, to standard output.

Example:

    $SCRIPTNAME A B C > dump.pcap

Please test and report bugs to https://github.com/redesunlu/netkit-ng-core/
EOF
    exit 1
}


test_if_netkit_defined () {
    if [ -z "$NETKIT_HOME" ]; then
        echo 1>&2 "$SCRIPTNAME: The NETKIT_HOME environment variable is not properly set;"
        echo 1>&2 "please set it as described in the Netkit documentation and try again."
        exit 1
    fi
}


test_if_mergecap_available () {
    if [ -z "$MERGECAP" ]; then
        echo 1>&2 "Could not find the mergecap utility."
        echo 1>&2 "Please install the wireshark-common package and try again."
        exit 1
    fi
}


start_vdumps () {
    NETKIT_DUMPS=`mktemp --tmpdir -d vmultidump.XXXXXX`
    trap ctrl_c_cleanup INT

    (>&2 echo "Capturing from $* domains ... Press Ctrl+C to end capture")

    for DOMAIN in $*; do
        vdump $DOMAIN > $NETKIT_DUMPS/vdump_$DOMAIN.pcap&
    done
    wait
}


ctrl_c_cleanup () {
    find $NETKIT_DUMPS -maxdepth 1 -type f -size 0 -delete   # delete empty dumps
    $MERGECAP $NETKIT_DUMPS/vdump_*.pcap -w -
    rm $NETKIT_DUMPS/vdump_*.pcap || true
}


# main
if [[ -z "$1" ]]; then
    help
fi
test_if_netkit_defined
test_if_mergecap_available
start_vdumps $*
